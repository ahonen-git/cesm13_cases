#! /bin/csh -f

# -------------------------------------------------------------------------
# icex build specific settings
# -------------------------------------------------------------------------


###source /glade/apps/opt/lmod/lmod/init/csh

###module purge
###module load ncarenv/1.0
###module load ncarbinlibs/1.0
###module load perlmod

#if ($?PBS_ENVIRONMENT == 0) then # non-batch mode
###module purge
###module load netcdf/4.1.3

if ( $COMPILER == "intel" ) then
###  module load intel/13.1.2
###  module load mkl/11.0.1
###  module load trilinos/11.0.3
# Currently trilinos is only supported with the INTEL compiler

  source /etc/profile.d/modules.csh
  module load intelcompiler/13.1.2.183
  if ( $MPILIB == "impi" ) then
    module load intelmpi/4.0.3.008
  else if ( $MPILIB == "mpt" ) then
    module load mpt/2.05
  else
    echo "Error: invalid MPILIB:$MPILIB"
    exit -1
  endif

# instead of "module load" 
#   netcdf/4.3.2
#   pnetcdf/1.4.1
#   trilinos/11.10.4 (not yet)
  setenv NETCDF_PATH  /home/gtmitsuo/Linux-x86_64_intel13.1.2
  setenv PNETCDF_PATH /home/gtmitsuo/Linux-x86_64_intel13.1.2
  if ($?LD_LIBRARY_PATH) then
    setenv LD_LIBRARY_PATH ${NETCDF_PATH}/lib:${LD_LIBRARY_PATH}
  else
    setenv LD_LIBRARY_PATH ${NETCDF_PATH}/lib
  endif
  setenv PATH ${NETCDF_PATH}/bin:${PATH}

# Currently netcdf-mpi is only supported for intel
###  if ( $MPILIB == "mpi-serial") then
###    module load netcdf/4.3.0
###  else
# Currently netcdf-mpi is only supported for intel
###    module load netcdf-mpi/4.3.0
###  endif

# Currently esmf is only supported with the INTEL compiler
###  module load esmf
###  if ( $MPILIB == "mpi-serial") then
###    if ( $DEBUG == "TRUE") then
###      module load esmf-6.3.0r-ncdfio-uni-g
###    else
###      module load esmf-6.3.0r-ncdfio-uni-O
###    endif
###  else
###    if ( $DEBUG == "TRUE") then
###      module load esmf-6.3.0r-defio-mpi-g
###    else
###      module load esmf-6.3.0r-defio-mpi-O
###    endif
###  endif
endif

###module load ncarcompilers/1.0
###if ( $MPILIB != "mpi-serial") then
###  module load pnetcdf/1.3.0
###endif
###module load cmake/2.8.10.2

# -------------------------------------------------------------------------
# Build and runtime environment variables - edit before the initial build 
# -------------------------------------------------------------------------
limit stacksize unlimited
limit datasize  unlimited

###setenv OMP_STACKSIZE 256M
###setenv MP_LABELIO yes

setenv FORT_BUFFERED    TRUE
setenv FORT_FMT_RECL    3000

# MPI Environment
###setenv MP_INFOLEVEL                   2
###setenv MP_SHARED_MEMORY             yes
###setenv MP_EUILIB                    us
###setenv MP_MPILIB                    $MPILIB
###setenv MP_STDOUTMODE                unordered
#
###setenv MP_RC_USE_LMC                yes

# setting MP_EUILIBPATH is a temporary work-around for occasional mpi hangs 
# on yellowstone.  this should be removed when yellowstone is patched.
#setenv MP_EUILIBPATH                /glade/u/home/archerc/EFIX5

# Set a host file so that mpi can run on login node
###if ( $HOSTNAME =~ {*login*} ) then
###  echo $HOSTNAME > $CASEROOT/hostfile
###  setenv MP_HOSTFILE $CASEROOT/hostfile
###  setenv MP_PROCS 1
###endif
###if ( $DEBUG == "TRUE" ) then
###  module load debug
###  module load totalview
###  setenv MP_EUIDEVELOP yes
###  setenv MP_EAGER_LIMIT               0
###else
###  setenv MP_EUIDEVELOP min
###endif
###setenv MP_EAGER_LIMIT 0

